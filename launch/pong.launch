<?xml version="1.0"?>
<launch>
	<!--_________________________________ARGUMENTS_________________________________-->

	<!-- acquisition arguments -->
	<arg name="plugin" default='rosneuro::EGDDevice'/>
	<!-- <arg name="devarg" default="eego|SR|512" doc="Antneuro 64ch"/>  -->
	<arg name="devarg" default="/home/curtaz/neurorobotics/gdf_files/speech_test.gdf" doc="Antneuro 64ch"/> 
	<arg name="framerate" default='16'/>
	<arg name="samplerate" default='512'/>
			
	<!-- recorder arguments -->
	<arg name="autostart" default='true'/>
	<arg name="filepath"  default='$(env HOME)/neurorobotics/recordings' />
	
	<!-- filter chain arguments -->
	<arg name="filter" default="antneuro_speech" /> 

	<!-- classifier arguments -->
	<arg name="model_path" default="/home/curtaz/neurorobotics/models/d6_bhbf.pt" />
	<arg name="model_classes" default='[771,773]' /> 

	<!-- protocol arguments -->
	<arg name="modality"   default="control"/>
	<arg name="subject"   default="g2"/>
	<arg name="task"      default="pong"/>
	<arg name="extra"     default=""/>

	<!-- integrator arguments -->
	<arg name="integrator_plugin" default='rosneuro::integrator::Buffer'/>
	<arg name="n_classes" default="2" /> 
	<arg name="buffer_size" default="48" /> 
	<arg name="increment" default="1" /> 
	<arg name="init_val" default="[0.5,0.5]" /> 


	<!--_________________________________PARAMETERS________________________________-->

	<!-- Protocol parameters -->
	<rosparam param="/protocol/subject"	 subst_value="True">$(arg subject)</rosparam>
	<rosparam param="/protocol/modality" subst_value="True">$(arg modality)</rosparam>
	<rosparam param="/protocol/task"	 subst_value="True">$(arg task)</rosparam>
	<rosparam param="/protocol/extra"	 subst_value="True">$(arg extra)</rosparam>
	
	<!-- filter chain parameters -->
	<rosparam command="load" file="$(find launchers_speech_paolo)/config/ChainCfg.yaml" />

	<!--___________________________________NODES___________________________________-->
	
	<!-- aquisition node -->
	<node name="acquisition" pkg="rosneuro_acquisition" type="acquisition" output="screen" >
		<param name="~plugin" 	  value="$(arg plugin)"/>
		<param name="~devarg" 	  value="$(arg devarg)"/>
		<param name="~samplerate" value="$(arg samplerate)"/>
		<param name="~framerate"  value="$(arg framerate)"/>
	</node>

	<!-- recorder node -->
	<!-- <node name="recorder" pkg="rosneuro_recorder" type="recorder" >
		<param name="~autostart" value="$(arg autostart)"/>
		<param name="~filepath" value="$(arg filepath)"/>
	</node> -->
	
	<!-- filterchain node -->
	<node name="filterchain_node" pkg="rosneuro_dl" type="FilterChainNode.py" output="screen" >
			<param name="configname" value="$(arg filter)" />
	</node>  

	<!-- classifier node -->
	<node name="predict_neural" pkg="rosneuro_dl" type="ClassifierNode.py" output="screen" >
		<param name="model_path" value="$(arg model_path)" />
		<param name="classes" value="$(arg model_classes)" /> 
	</node>

	<!-- integrator node -->
	<node name="integrator" pkg="rosneuro_integrator" type="integrator" output="screen">
		<rosparam param="plugin" subst_value="True">$(arg integrator_plugin)</rosparam>
		<param name="buffer_size" value="$(arg buffer_size)"/>
		<param name="n_classes" value="$(arg n_classes)"/>
		<param name="increment" value="$(arg increment)"/>
		<rosparam param="init_val" subst_value="True">$(arg init_val)</rosparam>
		<remap from="/smr/neuroprediction/raw" to="/neuroprediction"/>
		<remap from="/smr/neuroprediction/integrated" to="/smr/neuroprediction/player1"/>
	</node> 

	<!-- pong game node -->
	<node name='pong' pkg='rosneuro_pong' type='PongNode.py' output='screen'></node>

</launch>
