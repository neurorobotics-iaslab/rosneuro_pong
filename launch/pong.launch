<?xml version="1.0"?>
<launch>

    <!-- acquisition arguments -->
    <arg name="plugin"  	default='rosneuro::EGDDevice'/> 
	<!-- antNeuro16 -->
	<!-- <arg name="devarg" 		default='eego|EEG_MASK|0x0001B7000231C620'/> -->
	<arg name="devarg" 		default='/home/whi/Downloads/g2.20250311.163408.calibration.mi_bfbh.gdf'/>
	
	
	<!-- recorder arguments -->
	<arg name="autostart" 	default='true'/>
	<arg name="filepath" 	default='/home/whi/pong_ws/gdfs'/>
	<arg name="subject"     default='g2'/>
	<arg name="modality" 	value='control'/>
	<arg name="task" 		default="mi_bfbh"/>
	<arg name="extra"		default="pong"/>
	
	<arg name="framerate" 	default='16'/>
	<arg name="samplerate"  default='512'/>
	<arg name="bagfilename"  default='$(arg subject)'/>
	
	<!-- protocol parameters -->
	<rosparam param="protocol/subject"  	subst_value="True">$(arg subject)</rosparam>
	<rosparam param="protocol/modality"		subst_value="True">$(arg modality)</rosparam>
	<rosparam param="protocol/task"  		subst_value="True">$(arg task)</rosparam>
	<rosparam param="protocol/extra"		subst_value="True">$(arg extra)</rosparam>

	<remap from="/protocol/subject"		to="protocol/subject"/>
	<remap from="/protocol/modality"	to="protocol/modality"/>
	<remap from="/protocol/task"		to="protocol/task"/>
	<remap from="/protocol/extra"		to="protocol/extra"/>

	
	<!-- processing arguments -->
	<arg name="lap_path"	default='/home/whi/pong_ws/laplacian_filters/lapmask_antneuro_16.mat'/>
	<arg name="decoder_path" default='/home/whi/pong_ws/models/g2_bfbh_20250313_2'/>
	<arg name="n_channels" default='16'/>
	
	
	<!-- integrator arguments -->
	<!-- <arg name="plugin_integrator" default='rosneuro::integrator::Exponential'/> -->
	<arg name="thresholds_feeedback"/>
	<arg name="alpha" default='0.98'  />
	<arg name="rejection" default='0.5'	/>
	<arg name="thresholds_integrator" default='[0.65 0.65]'/> 

	<arg name="plugin_integrator" default='rosneuro::integrator::Buffer'/>
	<arg name="buffer_size" default='100'	/>
	<arg name="init_val" default='[0.5,0.5]'	/>
	
	
	<!-- neurowheel arguments-->
	<arg name="thresholds" 		default='[1, 1]'/>
	<arg name="show_on_rest" 	default='True'/>
	<arg name="classes"      	default='[771, 773]'/>
	<arg name="trials" 			default='[9, 9]'/>
	<arg name='timestart_wheel' default='4000'/> <!-- [ms] -->
	 
	<!-- ________________________________________________________________________________________________________ -->

   
	<!-- acquisition node -->
	<node name="acquisition" pkg="rosneuro_acquisition" type="acquisition">
  	  	<param name="~plugin"		value="$(arg plugin)"/>
  	  	<param name="~devarg"		value="$(arg devarg)"/>
  	  	<param name="~framerate" 	value="$(arg framerate)"/>
  	  	<param name="~samplerate" 	value="$(arg samplerate)"/>
  	</node>

	<!-- laplacian node -->
	<node name="laplacian" pkg="laplacian_applier" type="node.py" output="screen">
		<param name="~lap_path" 	value="$(arg lap_path)"/>
	</node>

	<!-- BP node -->
	<rosparam command="load" file="/home/whi/pong_ws/src/config/ChainCfgBP.yaml" />
	<node name="filterchain_node" pkg="rosneuro_filters" type="filterchain_node" output="screen" >
		<param name="configname" value="ChainCfgTest" />
	</node>	

	<!-- buffer node -->
    <node name="buffer" pkg="riemann_classifier" type="buffer.py" output="screen">
		<param name="~samplerate" 		value="$(arg samplerate)"/>
		<param name="~n_channels" 		value="$(arg n_channels)"/>
	</node>
	
	<!-- recorder node -->
	<node name="recorder" pkg="rosneuro_recorder" type="recorder" >
		<param name="~autostart"			value="$(arg autostart)"/>
		<param name="~filepath" 			value="$(arg filepath)"/>
		<param name="/protocol/subject" 	value="$(arg subject)"/>
		<param name="/protocol/modality" 	value="$(arg modality)"/>
		<param name="/protocol/task" 		value="$(arg task)"/>

	</node>

	<!-- classifier node -->
	<node name="riemann_classifier" pkg="riemann_classifier" type="riemann_node.py" output="screen">
		<param name="~decoder_path" 	value="$(arg decoder_path)"/>
		<param name="~n_channels" 		value="$(arg n_channels)"/>
		<param name="~subject" 			value="$(arg subject)"/>
	</node>
  	
  	<!-- neurowheel node -->
	<node name="trainingwheel" pkg="rosneuro_feedback_wheel" type="controlwheel"  output="screen">
		<rosparam param="thresholds" 		subst_value="True">$(arg thresholds)</rosparam>
		<rosparam param="modality" 			subst_value="True">$(arg modality)</rosparam>
		<rosparam param="classes" 			subst_value="True">$(arg classes)</rosparam>
		<rosparam param="trials" 			subst_value="True">$(arg trials)</rosparam>
		<rosparam param="show_on_rest" 		subst_value="True">$(arg show_on_rest)</rosparam>
		<rosparam param="duration/begin" 	subst_value="True">$(arg timestart_wheel)</rosparam>
		<remap from='/smr/neuroprediction/integrated' to='/smr/neuroprediction/raw'/>
	</node>

	<!-- pong game node -->
	<node name='pong' pkg='rosneuro_pong' type='PongNode.py' output='screen'>
		<remap from='/smr/neuroprediction/player1' to='/smr/neuroprediction/raw'/>
		<!-- <param name="bot1_speed" 	  		value="50"/> -->
		<param name="bot2_speed" 	  		value="25"/>
	</node>


</launch>
